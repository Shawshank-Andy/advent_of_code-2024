#!/usr/bin/env python3

INPUT = "@@@INPUT@@@"

# Returns the input as an array of lines
def parse_as_lines(path):
  lines = []
  with open(path, 'rb') as f:
    lines = [line.rstrip() for line in f]
  return lines


# Returns the input as an array or arrays of whitespace tokenized lines
def parse_as_tokens(path):
  lines = []
  with open(path, 'rb') as f:
    lines = [line.rstrip().split() for line in f]
  return lines


# Returns the input as an array with each line the results of func(line)
def parse_as_custom(path, func):
  data = []
  with open(path, 'rb') as f:
    data = [func(line.rstrip()) for line in f]
  return data


def part1():
  # lines = parse_as_lines(INPUT)
  # tokens = parse_as_tokens(INPUT)
  # custom = parse_as_tokens(INPUT, lambda x: len(x))
  pass


def part2():
  # lines = parse_as_lines(INPUT)
  # tokens = parse_as_tokens(INPUT)
  # custom = parse_as_tokens(INPUT, lambda x: len(x))
  pass


part1()
part2()

